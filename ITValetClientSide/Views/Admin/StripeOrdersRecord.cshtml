@using ITValetFrontEnd.HelperClasses;
@{
    ViewData["Title"] = "StripeOrdersRecord";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="row m-10">
    <div class="panel panel-flat text-black">
        <div class="panel-heading" style="background: #E8ECED; padding:1px !important;">
            <h2 class="text-center text-black">
                Search
            </h2>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse" class="rotate-180"></a></li>
                </ul>
            </div>
        </div>
        <div class="panel-body pt-20 pb-20" style="display: none">
            <div class="row">
                <div class="col-md-6 col-lg-6" style="padding: 20px;padding-top:20px;">
                    <div class="form-group">
                        <label><strong>Customer Name:</strong></label>
                        <input type="text" maxlength="30" class="form-control" placeholder="Search username here" id="searchUserName" style="background-color:white">
                    </div>
                </div>

                <div class="col-md-6 col-lg-6" style="padding: 20px;padding-top:20px;">
                    <div class="form-group">
                        <label><strong>Tech Valet Name:</strong></label>
                        <input type="email" maxlength="40" class="form-control" id="searchItValet" style="background-color:white" placeholder="Search IT-Valet Here">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group">
                        <button onclick="clearSearch()" class="btn btn-danger btn-block">Reset</button><br>
                    </div>
                </div>
                <div class="col-md-6 col-sm-12 col-xs-12"></div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group text-right">
                        <button onclick="searchTable()" class="btn btn-success btn-block">Search</button><br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel p-20 m-10">
    <div class="row">
        <div class="col-md-12 text-center">
            <h3>Stripe Orders Detail</h3>
        </div>
    </div>
    <input type="hidden" id="way" value="" />

    <div class="table-responsive">
        <table class="table text-md-nowrap table-striped table-bordered text-center no-footer" id="userTable">
            <thead class="bg-dark text-white">
                <tr>
                    <th class="text-bold" hidden>...</th>
                    <th class="text-bold text-center" style="min-width: 140px;">Customer</th>
                    <th class="text-bold text-center" style="min-width: 140px;">IT-Valet</th>
                    <th class="text-bold text-center" style="min-width: 140px;">Order Title</th>
                    <th class="text-bold text-center" style="min-width: 150px;">Order Status</th>
                    <th class="text-bold text-center" style="min-width: 150px;">Order Price</th>
                    <th class="text-bold text-center" style="min-width: 130px;">Payment Status</th>
                    <th class="text-bold text-center" style="min-width: 130px;">Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section CustomJs {
        
    <script>
        $('#manageStripeOrderDetail').addClass('active');
        loadTable();
        function loadTable() {
            var searchUserName = $('#searchUserName').val();
            var searchITValet = $('#searchItValet').val();
            var searchStatus = $('#searchStatus').val();

            $('#userTable').DataTable().clear();
            $('#userTable').DataTable().destroy();
            $('#userTable').DataTable({
                "ajax": {
                    "url": "@ProjectVariables.BaseUrl" + "Admin/GetStripeOrdersRecord?UserName=" + searchUserName + "&ItValet=" + searchITValet,
                    "type": "POST",
                    "dataType": "json",
                    "headers":
                    {
                        'Authorization': Token
                    },
                    "data":
                    {

                    }
                },
                'columns':
                    [
                        { "data": "hidden", "name": "0" },
                        { "data": "customerName", "name": "CustomerName" },
                        { "data": "itValet", "name": "ITValet" },
                        { "data": "orderTitle", "name": "OrderTitle" },
                        { "data": "orderStatus", "name": "OrderStatus" },
                        { "data": "orderPrice", "name": "OrderPrice" },
                        { "data": "paymentStatus", "name": "PaymentStatus" },
                    ],
                'columnDefs':
                    [
                        {
                            "targets": 0,
                            "visible": false,
                            "searchable": false,
                            "render": function (data, type, full, meta) {
                                return null;
                            }
                        },
                        {
                            "targets": 1,
                            'className': '',
                            'sortable': false,
                            "render": function (data, type, full, meta) {
                                return full.customerName;
                            }
                        },
                        {
                            "targets": 2,
                            'className': '',
                            'sortable': false,
                            "render": function (data, type, full, meta) {
                                return full.itValet;
                            }
                        },
                        {
                            "targets": 3,
                            'className': '',
                            'sortable': false,
                            "render": function (data, type, full, meta) {
                                return full.orderTitle;
                            }
                        },
                        {
                            "targets": 4,
                            "className": '',
                            "render": function (data, type, full, meta) {
                                var OrderStatus = '';
                                switch (full.orderStatus) {
                                    case "0":
                                        OrderStatus = '<a href="../User/OrderDetail?orderId=' + full.orderEncId + '" class="btn btn-sm btn-dark" style="padding: 4px 8px; font-size: 12px;">In Progress</a>';
                                        break;
                                    case "1":
                                        OrderStatus = '<a href="../User/OrderDetail?orderId=' + full.orderEncId + '" class="btn btn-sm btn-success" style="padding: 4px 8px; font-size: 12px;">Completed</a>';
                                        break;
                                    case "2":
                                        OrderStatus = '<a href="../User/OrderDetail?orderId=' + full.orderEncId + '" class="btn btn-sm btn-success" style="padding: 4px 8px; font-size: 12px;">Completed</a>';
                                        break;
                                    case "4":
                                        OrderStatus = '<a href="../User/OrderDetail?orderId=' + full.orderEncId + '" class="btn btn-sm btn-danger" style="padding: 4px 8px; font-size: 12px;">Cancelled</a>';
                                        break;
                                    default:
                                        OrderStatus = "N/A";
                                        break;
                                }
                                return OrderStatus;
                            }
                        },
                        {
                            "targets": 5,
                            'className': '',
                            "render": function (data, type, full, meta) {
                                return  "$" + full.orderPrice;
                            }
                        },
                        {
                            "targets": 6,
                            'className': '',
                            'sortable': false,
                            "render": function (data, type, full, meta) {
                                if (full.paymentStatus == "COMPLETED") {
                                    var paymentStatus = '<span class="label label-success">COMPLETED</span>';
                                    return paymentStatus;
                                }
                                if (full.paymentStatus == "REFUNDED") {
                                    var paymentStatus = '<span class="label label-danger">REFUNDED</span>';
                                    return paymentStatus;
                                }
                                if (full.paymentStatus == "PAID-BY-PACKAGE") {
                                    var paymentStatus = '<span class="label label-secondary">PAID-BY-PACKAGE</span>';
                                    return paymentStatus;
                                }
                                else {
                                    var paymentStatus = "N/A"
                                    return paymentStatus;
                                }
                            }
                        },
                        {
                            "targets": 7,
                            'className': '',
                            'sortable': false,
                            "render": function (data, type, full, meta) {
                                var dropdownMenu = '<ul class="dropdown-menu dropdown-menu-right">';

                                if (full.orderStatus == "0" && full.stripeStatus == "1") {
                                    // Show "Cancel" button for order status 0 and completed payment
                                    dropdownMenu += '<li><a href="#" onclick="DeleteOrderAndRefund(\'' + full.stripeId + '\' , \'' + full.id + '\')"><i class="icon-bin"></i> Cancel</a></li>';
                                } else if (full.orderStatus == "4" && full.stripeStatus == "3") {
                                    // Show "Refund" button for order status 4 and completed payment
                                    dropdownMenu += '<li><a href="#" onclick="DeleteOrderAndRevertSession(\'' + full.id + '\')"><i class="icon-bin"></i> Cancel</a></li>';
                                } else if (full.orderStatus == "1" && full.stripeStatus == "5") {
                                    // Show "Cancel" button for order status 1 and completed payment
                                    dropdownMenu += '<li class="disabled"><a href="#"><i class="icon-checkmark"></i> Order Completed</a></li>';
                                }
                                else if (full.orderStatus == "4" && full.stripeStatus == "2") {
                                    // Show "Payment Refunded" as non-clickable for order status 4 and refunded payment
                                    dropdownMenu += '<li class="disabled"><a href="#"><i class="icon-cross"></i> Payment Refunded</a></li>';
                                }
                                else if (full.orderStatus == "4" && full.paymentStatus == "4") {
                                    // Show "Payment Refunded" as non-clickable for order status 4 and refunded payment
                                    dropdownMenu += '<li class="disabled"><a href="#"><i class="icon-cross"></i> SESSION_REVERTED</a></li>';
                                }
                                dropdownMenu += '</ul>';

                                var dropdownButton = '<ul class="icons-list">' +
                                    '<li class="dropdown">' +
                                    '	<a href="#" class="dropdown-toggle" data-toggle="dropdown">' +
                                    '		<i class="icon-menu"></i>' +
                                    '	</a>' +
                                    dropdownMenu +
                                    '</li>' +
                                    '</ul>';

                                return dropdownButton;
                            }
                        }
                    ],
                "serverSide": "true",
                "processing": "true",
                "language":
                {
                    "processing": "<i class='icon-spinner spinner icon-2x'></i>",
                    "search": "<span>Search :</span> _INPUT_",
                    "searchPlaceholder": "Filter Data",
                    "lengthMenu": "<span>Show :</span> _MENU_",
                    "paginate": { 'first': 'First', 'last': 'Last', 'next': '&rarr;', 'previous': '&larr;' }
                }
            });
        }
        function searchTable() {
            $('#userTable').DataTable().destroy();
            loadTable();
        }

        function clearSearch() {
            $('#searchUserName').val("");
            $('#searchItValet').val("");
            $('#searchStatus').val("").change();

            $('#userTable').DataTable().destroy();
            loadTable();
        }

    </script>
    <script>

        function DeleteOrderAndRefund(stripeId, orderid) {
            openConfirmationModal('Warning!', 'Are you sure you want to cancel this order?', 'Delete', function () {
                cancelANDrefundOrder(stripeId, orderid);
            });
        }

        function cancelANDrefundOrder(stripeChargeId, orderId) {
            if (stripeChargeId !== "" && orderId !== "") {
                // Clear the DataTable first
                $('#userTable').DataTable().clear();
                $('#userTable').DataTable().destroy();
                //Make an Ajax Call For Cancel Order and Refund Payment
                $.ajax({
                    type: 'POST',
                    url: "@ProjectVariables.BaseUrl" + "StripePayment/StripeRefund?chargeId=" + stripeChargeId + "&OrderId=" + orderId,
                    dataType: "json",
                    headers: {
                        'Authorization': Token
                    },
                    success: function (response) {
                        console.log("Response:", response);
                        if (response.status === true) {
                            triggerSweetAlert("Cancellation Request Processed", "@ProjectVariables.SuccessColor");
                            loadTable();
                        } else {
                            triggerSweetAlert("Something went Wrong", "@ProjectVariables.DangerColor");
                        }
                    },
                    error: function (response) {
                        triggerSweetAlert("Something went Wrong", "@ProjectVariables.DangerColor");
                    },
                    complete: function () {

                    }
                });
            }
        }

        function DeleteOrderAndRevertSession(orderId) {
            openConfirmationModal('Warning!', 'Are you sure you want to cancel this order?', 'Delete', function () {
                cancelOrderAndRevertSessions(orderId);
            });
        }

        function cancelOrderAndRevertSessions(orderId) {
            if (orderId != "") {
                // Clear the DataTable first
                $('#userTable').DataTable().clear();
                $('#userTable').DataTable().destroy();

                $.ajax({
                    type: 'POST',
                    url: "@ProjectVariables.BaseUrl" + "StripePayment/CancelOrderAndRevertSession?OrderId=" + orderId,
                    dataType: "json",
                    headers: {
                        'Authorization': Token
                    },
                    success: function (response) {
                        console.log("Response:", response);
                        if (response.status === true) {
                            triggerSweetAlert("Cancellation Request Processed", "@ProjectVariables.SuccessColor");
                            loadTable();
                        } else {
                            triggerSweetAlert("Something went Wrong", "@ProjectVariables.DangerColor");
                        }
                    },
                    error: function (response) {
                        triggerSweetAlert("Something went Wrong", "@ProjectVariables.DangerColor");
                    },
                    complete: function () {

                    }
                });
            }
        }
    </script>
}

